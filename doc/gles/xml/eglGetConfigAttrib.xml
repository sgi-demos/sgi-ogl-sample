<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook V4.2//EN" "DTD/docbook/docbookx.dtd">

<!--
  License Applicability. Except to the extent portions of this file are
  made subject to an alternative license as permitted in the SGI Free
  Software License B, Version 1.1 (the "License"), the contents of this
  file are subject only to the provisions of the License. You may not use
  this file except in compliance with the License. You may obtain a copy
  of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
  Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:

  http://oss.sgi.com/projects/FreeB

  Note that, as provided in the License, the Software is distributed on an
  "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
  DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
  CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
  PARTICULAR PURPOSE, AND NON-INFRINGEMENT.

  Original Code. The Original Code is: OpenGL ES Reference Manual,
  Version 1.0, released September 2003, developed by Silicon Graphics,
  Inc.  The Original Code is Copyright (c) 2003 Silicon Graphics, Inc.
  Copyright in any portions created by third parties is as indicated
  elsewhere herein.  All Rights Reserved.
-->

<refentry id="eglGetConfigAttrib">

  <refmeta>
    <refentrytitle>eglGetConfigAttrib</refentrytitle>
    <manvolnum>3G</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>eglGetConfigAttrib</refname>
    <refpurpose>
      return information about an <acronym>EGL</acronym> frame buffer
      configuration
    </refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>C Specification</title>

    <funcsynopsis>
      <funcprototype>
        <funcdef>EGLBoolean <function>eglGetConfigAttrib</function></funcdef>
        <paramdef>EGLDisplay <parameter>display</parameter></paramdef>
        <paramdef>EGLConfig <parameter>config</parameter></paramdef>
        <paramdef>EGLint <parameter>attribute</parameter></paramdef>
        <paramdef>EGLint * <parameter>value</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term><parameter>display</parameter></term>
        <listitem><para>Specifies the EGL display connection.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>config</parameter></term>
        <listitem><para>Specifies the EGL frame buffer configuration to be
          queried.
        </para></listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>attribute</parameter></term>
        <listitem><para>Specifies the EGL rendering context attribute to be
        returned.</para></listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>value</parameter></term>
        <listitem><para>Returns the requested value.</para></listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Description</title>

    <para>
      <function>eglGetConfigAttrib</function> returns in
      <parameter>value</parameter> the value of
      <parameter>attribute</parameter> for
      <parameter>config</parameter>.
      <parameter>attribute</parameter> can be one of the following:
    </para>

    <variablelist>
      <varlistentry>
      <term><constant>EGL_BUFFER_SIZE</constant></term>
      <listitem><para>Returns the depth of the color buffer.
        It is the sum of
        <constant>EGL_RED_SIZE</constant>,
        <constant>EGL_GREEN_SIZE</constant>,
        <constant>EGL_BLUE_SIZE</constant>, and
        <constant>EGL_ALPHA_SIZE</constant>.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_RED_SIZE</constant></term>
      <listitem><para>Returns the number of bits of red stored in the
      color buffer.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_GREEN_SIZE</constant></term>
      <listitem><para>Returns the number of bits of green stored in the
      color buffer.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_BLUE_SIZE</constant></term>
      <listitem><para>Returns the number of bits of blue stored in the
      color buffer.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_ALPHA_SIZE</constant></term>
      <listitem><para>Returns the number of bits of alpha stored in the
      color buffer.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_CONFIG_CAVEAT</constant></term>
      <listitem><para>Returns the caveats for the frame buffer configuration.
        Possible caveat values are
        <constant>EGL_NONE</constant>,
        <constant>EGL_SLOW_CONFIG</constant>, and
        <constant>EGL_NON_CONFORMANT</constant>.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_CONFIG_ID</constant></term>
      <listitem><para>Returns the ID of the frame buffer configuration.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_DEPTH_SIZE</constant></term>
      <listitem><para>Returns the number of bits in the depth buffer.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_LEVEL</constant></term>
      <listitem><para>Returns the frame buffer level.
        Level zero is the default frame buffer.
        Positive levels correspond to frame buffers that overlay the default
        buffer and negative levels correspond to frame buffers that underlay
        the default buffer.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_MAX_PBUFFER_WIDTH</constant></term>
      <listitem><para>Returns the maximum width of a pixel buffer surface in pixels.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_MAX_PBUFFER_HEIGHT</constant></term>
      <listitem><para>Returns the maximum height of a pixel buffer surface in pixels.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_MAX_PBUFFER_PIXELS</constant></term>
      <listitem><para>Returns the maximum size of a pixel buffer surface in pixels.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_NATIVE_RENDERABLE</constant></term>
      <listitem><para>Returns <constant>EGL_TRUE</constant> if native rendering
        APIs can render into the surface,
        <constant>EGL_FALSE</constant> otherwise.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_NATIVE_VISUAL_ID</constant></term>
      <listitem><para>Returns the ID of the associated native visual.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_NATIVE_VISUAL_TYPE</constant></term>
      <listitem><para>Returns the type of the associated native visual.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_PRESERVED_RESOURCES</constant></term>
      <listitem><para>Returns <constant>EGL_TRUE</constant> if resources
        are preserved across power management events,
        <constant>EGL_FALSE</constant> otherwise.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_SAMPLE_BUFFERS</constant></term>
      <listitem><para>Returns the number of multisample buffers.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_SAMPLES</constant></term>
      <listitem><para>Returns the number of samples per pixel.</para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_STENCIL_BITS</constant></term>
      <listitem><para>Returns the number of bits in the stencil buffer.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_SURFACE_TYPE</constant></term>
      <listitem><para>Returns the types of supported EGL surfaces.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_TRANSPARENT_TYPE</constant></term>
      <listitem><para>Returns the type of supported transparency.
        Possible transparency values are:
        <constant>EGL_NONE</constant>, and
        <constant>EGL_TRANSPARENT_RGB</constant>.
      </para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_TRANSPARENT_RED</constant></term>
      <listitem><para>Returns the transparent red value.</para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_TRANSPARENT_GREEN</constant></term>
      <listitem><para>Returns the transparent green value.</para></listitem>
      </varlistentry>

      <varlistentry>
      <term><constant>EGL_TRANSPARENT_BLUE</constant></term>
      <listitem><para>Returns the transparent blue value.</para></listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Errors</title>

    <para>
      <constant>EGL_FALSE</constant> is returned on failure,
      <constant>EGL_TRUE</constant> otherwise.
      <parameter>value</parameter> is not modified when
      <constant>EGL_FALSE</constant> is returned.
    </para>

    <para>
      <constant>EGL_BAD_DISPLAY</constant> is generated if
      <parameter>display</parameter> is not an EGL display connection.
    </para>
    
    <para>
      <constant>EGL_NOT_INITIALIZED</constant> is generated if
      <parameter>display</parameter> has not been initialized.
    </para>

    <para>
      <constant>EGL_BAD_CONFIG</constant> is generated if
      <parameter>config</parameter> is not an EGL frame buffer configuration.
    </para>
    
    <para>
      <constant>EGL_BAD_ATTRIBUTE</constant> is generated if
      <parameter>attribute</parameter> is not a valid frame buffer
      configuration attribute.
    </para>
  </refsect1>
    
  <refsect1>
    <title>See Also</title>

    <para>
      <citerefentry><refentrytitle>eglChooseConfig</refentrytitle></citerefentry>,
      <citerefentry><refentrytitle>eglGetConfigs</refentrytitle></citerefentry>  
    </para>
  </refsect1>

</refentry>
