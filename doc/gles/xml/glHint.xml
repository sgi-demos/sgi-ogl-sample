<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook V4.2//EN" "DTD/docbook/docbookx.dtd">

<!--
  License Applicability. Except to the extent portions of this file are
  made subject to an alternative license as permitted in the SGI Free
  Software License B, Version 1.1 (the "License"), the contents of this
  file are subject only to the provisions of the License. You may not use
  this file except in compliance with the License. You may obtain a copy
  of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
  Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:

  http://oss.sgi.com/projects/FreeB

  Note that, as provided in the License, the Software is distributed on an
  "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
  DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
  CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
  PARTICULAR PURPOSE, AND NON-INFRINGEMENT.

  Original Code. The Original Code is: OpenGL ES Reference Manual,
  Version 1.0, released September 2003, developed by Silicon Graphics,
  Inc.  The Original Code is Copyright (c) 2003 Silicon Graphics, Inc.
  Copyright in any portions created by third parties is as indicated
  elsewhere herein.  All Rights Reserved.
-->

<refentry id="glHint">
  <refmeta>
    <refentrytitle>glHint</refentrytitle>
    <manvolnum>3G</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>glHint</refname>
    <refpurpose>specify implementation-specific hints</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>C Specification</title>

    <funcsynopsis>
      <funcprototype>
        <funcdef>void <function>glHint</function></funcdef>
        <paramdef>GLenum <parameter>target</parameter></paramdef>
        <paramdef>GLenum <parameter>mode</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>
          <parameter>target</parameter>
        </term>

        <listitem>
          <para>Specifies a symbolic constant indicating the
          behavior to be controlled. 
          <constant>GL_FOG_HINT</constant> , 
          <constant>GL_LINE_SMOOTH_HINT</constant> , 
          <constant>GL_PERSPECTIVE_CORRECTION_HINT</constant>, and 
          <constant>GL_POINT_SMOOTH_HINT</constant> are accepted.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <parameter>mode</parameter>
        </term>

        <listitem>
          <para>Specifies a symbolic constant indicating the
          desired behavior. 
          <constant>GL_FASTEST</constant>, 
          <constant>GL_NICEST</constant>, and 
          <constant>GL_DONT_CARE</constant> are accepted.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Description</title>

    <para>Certain aspects of GL behavior, when there is room for
    interpretation, can be controlled with hints. A hint is
    specified with two arguments.  <parameter>target</parameter>
    is a symbolic constant indicating the behavior to be
    controlled, and <parameter>mode</parameter>
    is another symbolic constant indicating the desired behavior.
    The initial value for each <parameter>target</parameter> is 
    <constant>GL_DONT_CARE</constant>. 
    <parameter>mode</parameter> can be one of the following:</para>

    <variablelist>
      <varlistentry>
        <term>
          <constant>GL_FASTEST</constant>
        </term>

        <listitem>
          <para>The most efficient option should be chosen.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <constant>GL_NICEST</constant>
        </term>

        <listitem>
          <para>The most correct, or highest quality, option should
          be chosen.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <constant>GL_DONT_CARE</constant>
        </term>

        <listitem>
          <para>No preference.</para>
        </listitem>
      </varlistentry>
    </variablelist>


    <para>Though the implementation aspects that can be hinted are
    well defined, the interpretation of the hints depends on the
    implementation. The hint aspects that can be specified with 
    <parameter>target</parameter>,
    along with suggested semantics, are as follows:</para>

    <variablelist>
      <varlistentry>
        <term>
          <constant>GL_FOG_HINT</constant>
        </term>

        <listitem>
          <para>Indicates the accuracy of fog calculation. If
          per-pixel fog calculation is not efficiently supported by
          the GL implementation, hinting 
          <constant>GL_DONT_CARE</constant> or 
          <constant>GL_FASTEST</constant> 
          can result in per-vertex calculation of fog effects.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <constant>GL_LINE_SMOOTH_HINT</constant>
        </term>

        <listitem>
          <para>Indicates the sampling quality of antialiased
          lines. If a larger filter function is applied, hinting 
          <constant>GL_NICEST</constant>

          can result in more pixel fragments being generated during
          rasterization,</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <constant>GL_PERSPECTIVE_CORRECTION_HINT</constant>
        </term>

        <listitem>
          <para>Indicates the quality of color and texture
          coordinate interpolation. If perspective-corrected
          parameter interpolation is not efficiently supported by
          the GL implementation, hinting <constant>GL_DONT_CARE</constant> or 
          <constant>GL_FASTEST</constant> 
          can result in simple linear interpolation of colors
          and/or texture coordinates.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <constant>GL_POINT_SMOOTH_HINT</constant>
        </term>

        <listitem>
          <para>Indicates the sampling quality of antialiased
          points. If a larger filter function is applied, hinting 
          <constant>GL_NICEST</constant>
          can result in more pixel fragments being generated during
          rasterization,</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Notes</title>

    <para>The interpretation of hints depends on the
    implementation. Some implementations ignore 
    <function>glHint</function>
    settings.</para>
  </refsect1>

  <refsect1>
    <title>Errors</title>

    <para><constant>GL_INVALID_ENUM</constant> is generated if either 
    <parameter>target</parameter> or <parameter>mode</parameter>
    is not an accepted value.</para>
  </refsect1>
</refentry>
