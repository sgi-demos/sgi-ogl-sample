<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook V4.2//EN" "DTD/docbook/docbookx.dtd">

<!--
  License Applicability. Except to the extent portions of this file are
  made subject to an alternative license as permitted in the SGI Free
  Software License B, Version 1.1 (the "License"), the contents of this
  file are subject only to the provisions of the License. You may not use
  this file except in compliance with the License. You may obtain a copy
  of the License at Silicon Graphics, Inc., attn: Legal Services, 1600
  Amphitheatre Parkway, Mountain View, CA 94043-1351, or at:

  http://oss.sgi.com/projects/FreeB

  Note that, as provided in the License, the Software is distributed on an
  "AS IS" basis, with ALL EXPRESS AND IMPLIED WARRANTIES AND CONDITIONS
  DISCLAIMED, INCLUDING, WITHOUT LIMITATION, ANY IMPLIED WARRANTIES AND
  CONDITIONS OF MERCHANTABILITY, SATISFACTORY QUALITY, FITNESS FOR A
  PARTICULAR PURPOSE, AND NON-INFRINGEMENT.

  Original Code. The Original Code is: OpenGL ES Reference Manual,
  Version 1.0, released September 2003, developed by Silicon Graphics,
  Inc.  The Original Code is Copyright (c) 2003 Silicon Graphics, Inc.
  Copyright in any portions created by third parties is as indicated
  elsewhere herein.  All Rights Reserved.
-->

<refentry id="glViewport">
  <refmeta>
    <refentrytitle>glViewport</refentrytitle>
    <manvolnum>3G</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>glViewport</refname>
    <refpurpose>set the viewport</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>C Specification</title>

    <funcsynopsis>
      <funcprototype>
        <funcdef>void <function>glViewport</function></funcdef>
        <paramdef>GLint <parameter>x</parameter></paramdef>
        <paramdef>GLint <parameter>y</parameter></paramdef>
        <paramdef>GLsizei <parameter>width</parameter></paramdef>
        <paramdef>GLsizei <parameter>height</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Parameters</title>

    <variablelist>
      <varlistentry>
        <term>
          <parameter>x</parameter>, 
          <parameter>y</parameter>
        </term>
        <listitem>
          <para>Specify the lower left corner of the viewport
          rectangle, in pixels. The initial value is (0, 0).</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <parameter>width</parameter>, 
          <parameter>height</parameter>
        </term>
        <listitem>
          <para>Specify the width and height of the viewport. When
          a GL context is first attached to a surface (e.g. window), 
          <parameter>width</parameter>
          and 
          <parameter>height</parameter>
          are set to the dimensions of that surface.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>Description</title>

    <para>
    <function>glViewport</function>

    specifies the affine transformation of 
    <replaceable>x</replaceable> and 
    <replaceable>y</replaceable>
    from normalized device coordinates to window coordinates. Let
    <inlineequation><math><mfenced>
      <msub><mi>x</mi><mi>nd</mi></msub>
      <msub><mi>y</mi><mi>nd</mi></msub>
    </mfenced></math></inlineequation>
    be normalized device coordinates. Then the window coordinates
    <inlineequation><math><mfenced>
      <msub><mi>x</mi><mi>w</mi></msub>
      <msub><mi>y</mi><mi>w</mi></msub>
    </mfenced></math></inlineequation>
    are computed as follows:</para>

    <informalequation><math>
      <mtable><mtr><mtd>
        <msub><mi>x</mi><mi>w</mi></msub>
        <maligngroup/>
        <mo>=</mo>
        <maligngroup/>
        <mo>(</mo>
          <msub><mi>x</mi><mi>nd</mi></msub>
          <mo>+</mo>
          <mn>1</mn>
        <mo>)</mo>
        <mfrac>
          <mi>width</mi>
          <mn>2</mn>
        </mfrac>
        <mo>+</mo>
        <mi>x</mi>
      </mtd></mtr>
      <mtr><mtd>
        <msub><mi>y</mi><mi>w</mi></msub>
        <maligngroup/>
        <mo>=</mo>
        <maligngroup/>
        <mo>(</mo>
          <msub><mi>y</mi><mi>nd</mi></msub>
          <mo>+</mo>
          <mn>1</mn>
        <mo>)</mo>
        <mfrac>
          <mi>height</mi>
          <mn>2</mn>
        </mfrac>
        <mo>+</mo>
        <mi>y</mi>
      </mtd></mtr></mtable>
    </math></informalequation>

    <para>Viewport width and height are silently clamped to a range
    that depends on the implementation. To query this range, call 
    <citerefentry><refentrytitle>glGetInteger</refentrytitle></citerefentry>
    with argument <constant>GL_MAX_VIEWPORT_DIMS</constant>.</para>
  </refsect1>

  <refsect1>
    <title>Errors</title>

    <para><constant>GL_INVALID_VALUE</constant> is generated if either 
      <parameter>width</parameter> or 
      <parameter>height</parameter> is negative.</para>
  </refsect1>

  <refsect1>
    <title>Associated Gets</title>

    <para>
      <citerefentry><refentrytitle>glGetInteger</refentrytitle></citerefentry>
      with argument <constant>GL_MAX_VIEWPORT_DIMS</constant>
    </para>
  </refsect1>

  <refsect1>
    <title>See Also</title>

    <para>
      <citerefentry><refentrytitle>glDepthRange</refentrytitle></citerefentry>, 
      <citerefentry><refentrytitle>glGetInteger</refentrytitle></citerefentry>
    </para>
  </refsect1>
</refentry>
